# Here is an example of a Github workflow file that uses this action to triggers an event_type called functional-tests.
# The emitted event can be consumed in another Github workflow, either within the same repository or another one. 

name: triggering a workflow from another workflow.
on: push

jobs:
  job-build:
    name: Dispatch to `GitHub_Actions_Exploring1`
    runs-on: ubuntu-latest
    # steps:
    #   - name: Emit repository_dispatch
    #     uses: mvasigh/dispatch-action@main
    #     with:
    #       # You should create a personal access token and store it in your repository
    #       token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
    #       repo: GitHub_Actions_Exploring1
    #       owner: mdfareed2001
    #       event_type: functional-tests

# By default, this action will hydrate the client_payload of the repository dispatch event with the original event payload 
# under the event key (equivalent to github.context.payload). You can also send any additional data by supplying the message 
# input option, which will also be available under the message key of the client_payload object. This can be used in other 
# workflows by accessing ${{ github.event.client_payload.message }} in any workflow triggered by this action
    steps:
      - name: Dispatch submodule_push event
        uses: mvasigh/dispatch-action@main
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          repo: GitHub_Actions_Exploring1
          event_type: functional-tests
          message: |
            {
              "foo": "bar"
            }
